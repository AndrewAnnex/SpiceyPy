# AppVeyor.com is a Continuous Integration service to build and run tests under Windows
# This yml file was made in part by looking at the yml files for conda and astropy.

# This is not a .NET project, so we build SpiceyPy in the install step.
build: off

environment:
  global:
      WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\windows_sdk.cmd"

  matrix:
      - PYTHON: "C:\\Python27"
        CONDA: "C:\\Miniconda"
        CONDA_BUILDS: C:\\Miniconda\conda-bld\win-32
        PYTHON_VERSION: "2.7.x"
        ARCH: "32"
        PLAT_NAME: "win32"
        PY_TAG: "cp27"

      - PYTHON: "C:\\Python27-x64"
        CONDA: "C:\\Miniconda-x64"
        CONDA_BUILDS: C:\\Miniconda-x64\conda-bld\win-64
        PYTHON_VERSION: "2.7.x"
        ARCH: "64"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp27"

      - PYTHON: "C:\\Python34"
        CONDA: "C:\\Miniconda3"
        CONDA_BUILDS: C:\\Miniconda3\conda-bld\win-32
        PYTHON_VERSION: "3.4.x"
        ARCH: "32"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win32"
        PY_TAG: "cp34"

      - PYTHON: "C:\\Python34-x64"
        CONDA: "C:\\Miniconda3-x64"
        CONDA_BUILDS: C:\\Miniconda3-x64\conda-bld\win-64
        PYTHON_VERSION: "3.4.x"
        ARCH: "64"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp34"

      - PYTHON: "C:\\Python35"
        CONDA: "C:\\Miniconda35"
        CONDA_BUILDS: C:\\Miniconda35\conda-bld\win-32
        PYTHON_VERSION: "3.5.x"
        ARCH: "32"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win32"
        PY_TAG: "cp35"

      - PYTHON: "C:\\Python35-x64"
        CONDA: "C:\\Miniconda35-x64"
        CONDA_BUILDS: C:\\Miniconda35-x64\conda-bld\win-64
        PYTHON_VERSION: "3.5.x"
        ARCH: "64"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp35"

platform:
  - x64

cache:
  - C:\Users\appveyor\Downloads -> setup.py

install:
  # Log out the python version just so we know it
  - ECHO "%PYTHON_VERSION%"

  # update path to use installed pip
  - set PATH=%PYTHON%\\scripts;%PATH%

  # Download things we absolutly need
  - pip install wheel twine six pytest
  # coveralls and or coverage fail to install for 3.4 64bit python builds so don't bother for now.

  # Check for numpy wheel, compile if absent
  - "powershell appveyor\\install_numpy.ps1"

  # Now install numpy from pre-built wheel. This may be fragile.
  - "%WITH_COMPILER% pip install --use-wheel --no-index --find-links=c:\\Users\\appveyor\\Downloads numpy"
  #- "%WITH_COMPILER% pip install --no-index --find-links=C:\\Users\\appveyor\\Downloads numpy"
  #- "%WITH_COMPILER% pip install C:\\Users\\appveyor\\Downloads\\*.whl"

  # Download CSPICE so we can build outside of python
  - "%PYTHON%/python getspice.py"

  # Make a backup of the PATH just in case.
  - set BK_PATH=%PATH%

  # Now install spiceypy
  - IF "%ARCH%"=="32" (call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86) ELSE (ECHO "probably a 64bit build")
  - IF "%ARCH%"=="64" (call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" amd64) ELSE (ECHO "probably a 32bit build")
  - "%PYTHON%/python setup.py install"

  - ECHO "Installed SpiceyPy!"
  # restore PATH
  - set PATH=%BK_PATH%

test_script:
  - "%PYTHON%/Scripts/py.test spiceypy/tests"

after_test:
  - ECHO "DONE!"
  - dir
  - ECHO "BUILDING WHEELS..."
  - "%PYTHON%/python setup.py sdist bdist_wheel --plat-name=%PLAT_NAME% --python-tag=%PY_TAG%"
  - ECHO "BUILDING CONDA PACKAGE..."
  - set BK_PATH=%PATH%

  # try conda thing
  - set PATH=%CONDA%;%CONDA%/Scripts;%CONDA%/Library/bin;%PATH%
  # Update to a known good conda, found from https://github.com/numba/numba/blob/master/appveyor.yml
  # (to workaround http://help.appveyor.com/discussions/problems/4910)
  - "conda install -q -y conda=4.1.4"
  - "conda install conda-build -y -q"
  - "conda build appveyor -q --no-anaconda-upload"
  - ps: ls $env:CONDA_BUILDS
  - ps: cp $env:CONDA_BUILDS\*.* .\dist\
  - ps: ls .\dist\
  - set PATH=%BK_PATH%


artifacts:
  - path: dist\*

