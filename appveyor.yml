# AppVeyor.com is a Continuous Integration service to build and run tests under Windows
# This yml file was made in part by looking at the yml files for conda and astropy.

# This is not a .NET project, so we build SpiceyPy in the install step.
build: off

environment:
  global:
      WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\windows_sdk.cmd"
  PYPI_PASSWORD:
    secure: ojP0ftEgmrZcijN49vQEPz39rkcPyOxtjwNp5hUYkdKxQq47DwkiaWOnVA11nog637VUmRnHb07uXwvrhK4bbg==

  matrix:
      - PYTHON: "C:\\Python27-x64"
        PYTHON_VERSION: "2.7.x"
        ARCH: "64"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp27"

      - PYTHON: "C:\\Python35-x64"
        PYTHON_VERSION: "3.5.x"
        ARCH: "64"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp35"

      - PYTHON: "C:\\Python36-x64"
        PYTHON_VERSION: "3.6.x"
        ARCH: "64"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp36"

      - PYTHON: "C:\\Python37-x64"
        PYTHON_VERSION: "3.7.x"
        ARCH: "64"
        WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp37"

platform:
  - x64

cache:
  - C:\Users\appveyor\Downloads -> setup.py

install:
  # Log out the python version just so we know it
  - ECHO "%PYTHON_VERSION%"

  # update path to use installed pip
  - set PATH=%PYTHON%\\scripts;%PATH%

  # Download things we absolutely need
  - pip install wheel twine six pytest
  - pip install numpy

  # Now install spiceypy
  - IF "%ARCH%"=="32" (call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86) ELSE (ECHO "probably a 64bit build")
  - IF "%ARCH%"=="64" (call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" amd64) ELSE (ECHO "probably a 32bit build")
  - "%PYTHON%/python setup.py install"

  - ECHO "Installed SpiceyPy!"
  - "%PYTHON%/Scripts/py.test --version"

test_script:
  - "%PYTHON%/Scripts/py.test spiceypy/tests"

after_test:
  - ECHO "DONE!"
  - ECHO "BUILDING WHEELS..."
  - "%PYTHON%/python setup.py sdist bdist_wheel --plat-name=%PLAT_NAME% --python-tag=%PY_TAG%"
  - ps: rm dist/*.egg

artifacts:
  - path: dist\*
    name: pypiartifacts

deploy_script:
  - echo "Starting Artifact Deployment"
  # populate pypirc file for twine
  - echo [distutils]                                  > %USERPROFILE%\\.pypirc
  - echo index-servers =                             >> %USERPROFILE%\\.pypirc
  - echo     pypi                                    >> %USERPROFILE%\\.pypirc
  - echo [pypi]                                      >> %USERPROFILE%\\.pypirc
  - echo username=andrewannex                        >> %USERPROFILE%\\.pypirc
  - echo password=%PYPI_PASSWORD%                    >> %USERPROFILE%\\.pypirc
  # upload to pypi for windows
  - set PATH=%BK_PATH%
  - set HOME=%USERPROFILE%
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" -And $env:APPVEYOR_REPO_BRANCH -eq "master") { Invoke-Expression "twine upload --skip-existing dist/*.whl" 2>$null } Else { write-output "Not on a tag on master, won't deploy to pypi"}
  - echo "Finished Artifact Deployment"
notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/3a0242522a806d39ba2b
    method: POST