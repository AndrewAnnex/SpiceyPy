[build-system]
requires = [
    "setuptools>=76.0.0",
    "Cython>=3.0.12",
    "numpy>=2.0,<3",
]
build-backend = "setuptools.build_meta"

[project]
name = "spiceypy"
dynamic = ["version"]
license = "MIT"
license-files = ["LICENSE"]
description = "A Python Wrapper for the NAIF CSPICE Toolkit"
readme = {file = "README.rst", content-type = "text/x-rst"}
keywords = ["spiceypy", "spice", "cspice", "naif", "jpl", "space", "geometry", "ephemeris"]
authors = [
    {name = "Andrew M. Annex", email="ama6fy@virginia.edu"}
]
maintainers = [
    {name = "Andrew M. Annex", email="ama6fy@virginia.edu"}
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.0,<3",
]

[dependency-groups]
core = [
    "numpy>=2.0,<3", 
]
test = [
    {include-group = "core"},
    "pytest>=7.0.0", 
    "pandas>=2.2.2",
    "pytest-benchmark"
]
publish = [
    "twine>=6.1.0"
]
ci = [
    {include-group = "core"},
    {include-group = "publish"},
    "coverage>=7.0.0", 
    "black"
]
build = [
    {include-group = "core"},
    "Cython>=3.0.12",
    "setuptools>=76.0.0",
    "build", 
]
dev = [
    {include-group = "build"},
    {include-group = "test"},
    {include-group = "ci"},
]
devwheel = [
    {include-group = "dev"},
    "cibuildwheel==3.0.1",
]
doc = [
    {include-group = "dev"},
    "myst-parser==2.0.0",
    "docutils",
    "graphviz",
    "sphinx<=7.0.0",
    "sphinx-copybutton",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "recommonmark"
]


classifiers = [
     "Development Status :: 5 - Production/Stable",
     "Natural Language :: English",
     "Topic :: Scientific/Engineering",
     "Topic :: Scientific/Engineering :: Astronomy",
     "Programming Language :: Python :: 3.10",
     "Programming Language :: Python :: 3.11",
     "Programming Language :: Python :: 3.12",
     "Programming Language :: Python :: 3.13",
     "Operating System :: MacOS :: MacOS X",
     "Operating System :: POSIX :: Linux",
     "Operating System :: POSIX :: BSD :: FreeBSD",
     "Operating System :: Microsoft :: Windows",
]


[project.urls]
"Homepage"      = "https://github.com/AndrewAnnex/SpiceyPy"
"Repository"    = "https://github.com/AndrewAnnex/SpiceyPy"
"Source"        = "https://github.com/AndrewAnnex/SpiceyPy"
"Conda-Forge"   = "https://anaconda.org/conda-forge/spiceypy"
"Documentation" = "https://spiceypy.readthedocs.io"
"Bug Tracker"   =  "https://github.com/AndrewAnnex/SpiceyPy/issues"
"Changelog"     = "https://github.com/AndrewAnnex/SpiceyPy/blob/main/CHANGELOG.md"


[tool.setuptools.dynamic]
version = {attr = "spiceypy.__version__"}
readme = {file = "README.rst"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["get_spice.py", "LICENSE", "README.rst"]
spiceypy = [ "utils/*.so", "utils/*.dylib", "utils/*.dll", "cyice/*.so", "cyice/*.dylib", "cyice/*.dll"]

# pytest things
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--benchmark-autosave"
markers = [
    "optional: mark tests as optional"
]

# cython lint things
[tool.cython-lint]
max-line-length = 180
ignore = ["E221", "E125"]

# coverage things
[tool.coverage.run]
relative_files = true

[tool.coverage.paths]
source = [
    "src/spiceypy/",
    "work/SpiceyPy/SpiceyPy/",
]


# all CI build wheel stuff goes here

# Linux Cleanup
[tool.cibuildwheel.linux]
before-build = [
    "rm -f {project}/src/cyice/cyice.c",
    "rm -f {project}/src/cyice/*.so",
]

# Macos Cleanup
[tool.cibuildwheel.macos]
before-build = [
    "rm -f {project}/src/cyice/cyice.c",
    "rm -f {project}/src/cyice/*.so",
]

[tool.cibuildwheel]
# use build instead of pip to build wheels
build-frontend = "build"
# environment variables for building wheels
environment = { CSPICE_NO_TEMP = "YES", LD_LIBRARY_PATH = "src/spiceypy/utils/" }
# build libcspice inside cibuildwheel before running python build steps
before-build = [
    "python -m pip install --group dev",
    "python {project}/get_spice.py",
]
# Specify Python Versions to build
build = ["cp310-*", "cp311-*", "cp312-*", "cp313-*"]
# Skip 32-bit builds, pypy, and musllinux
skip = ["*-win32", "*-manylinux_i686", "*-musllinux_i686", "pypy*", "pp*", "*-musllinux_aarch64", "*-musllinux_x86_64"]
# other options
build-verbosity = 2

before-test = [
    "pip install --group dev"
]
test-command = [
    "coverage run --source spiceypy -m pytest --pyargs spiceypy --benchmark-disable"
]
