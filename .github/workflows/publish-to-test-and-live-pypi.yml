name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  release:
    types: [ published ]

jobs:
  build-n-publish-linux:
    name: Build and publish SpiceyPy 🌶️ 🥧 Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🌶️ 🥧
        uses: actions/checkout@v2
      - name: Set up Python 🐍 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Display Python 🐍 
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ci-requirements.txt
      - name: Install SpiceyPy 🌶️ 🥧
        run: |
          python setup.py install
      - name: Test 🧪 with coverage 📈
        run: |
          coverage run --source spiceypy -m pytest --pyargs spiceypy
      - name: Upload coverage report to codecov
        run: |
          codecov
      - name: Build 🛠️ sdist source
        run: |
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          name: spiceypy_linux_dist
          path: dist/
      - name: Publish distribution 📦 to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          twine upload --non-interactive --skip-existing --repository testpypi dist/*
      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags') && (github.event_name == 'push' || github.event_name == 'release')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --non-interactive --skip-existing dist/*
  build-n-publish-windows:
    name: Build and publish SpiceyPy 🌶️ 🥧 Python 🐍 distributions 📦 to PyPI and TestPyPI on Windows
    strategy:
      matrix:
        include:
          - python-version: 3.6
            python-tag: "cp36"
          - python-version: 3.7
            python-tag: "cp37"
          - python-version: 3.8
            python-tag: "cp38"
          - python-version: 3.9
            python-tag: "cp39"
    runs-on: windows-latest
    steps:
      - name: Setup 🔬🍦🏗️
        uses: ilammy/msvc-dev-cmd@v1.4.1
      - name: Checkout 🌶️ 🥧
        uses: actions/checkout@v2
      - name: Set up Python 🐍 ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python 🐍 
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ci-requirements.txt
      - name: Install SpiceyPy 🌶️ 🥧
        run: |
          python setup.py install
      - name: Test 🧪 with coverage 📈
        run: |
          coverage run --source spiceypy -m pytest --pyargs spiceypy
      - name: Upload coverage report to codecov
        run: |
          codecov
      - name: Build 🛠️ sdist source
        run: |
          python setup.py sdist
      - name: Build 🛠️ bdist_wheel
        run: |
          python setup.py bdist_wheel --plat-name="win-amd64" --python-tag=${{ matrix.python-tag }}
      - uses: actions/upload-artifact@v2
        with:
          name: spiceypy_windows_dist
          path: dist/
      - name: Publish distribution 📦 to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          twine upload --non-interactive --skip-existing --repository testpypi dist/*
      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags') && (github.event_name == 'push' || github.event_name == 'release')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --non-interactive --skip-existing dist/*
