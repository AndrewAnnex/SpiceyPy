name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  pull_request: 
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  release:
    types: [ published ]

jobs:
  build_sdist:
    name: Make SpiceyPy 🌶️ 🥧 Python 🐍 source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🌶️ 🥧
        uses: actions/checkout@v2
      - name: Set up Python 🐍 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Display Python 🐍 
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ci-requirements.txt
      - name: Install SpiceyPy 🌶️ 🥧
        run: |
          python setup.py install
      - name: Test 🧪 with coverage 📈
        run: |
          coverage run --source spiceypy -m pytest --pyargs spiceypy
      - name: Upload coverage report to codecov
        run: |
          codecov
      - name: Build 🛠️ sdist source
        run: |
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
  build_wheels:
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.11"
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    name: Build SpiceyPy 🌶️ 🥧 Python 🐍 wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout 🌶️ 🥧
        uses: actions/checkout@v2
      - name: Setup 🔬🍦🏗️
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1.4.1
      - name: Set up Python 🐍 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Display Python 🐍 Version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ci-requirements.txt
          python -m pip install cibuildwheel==2.1.2
      - name: Build wheels for SpiceyPy 🌶️ 🥧
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - name: Upload wheels for SpiceyPy 🌶️ 🥧
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  publish_to_pypi:
    name: Publish SpiceyPy 🌶️ 🥧 Python 🐍 distributions 📦 to PyPI and TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - name: Set up Python 🐍 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Display Python 🐍
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine 
      - name: Publish distribution 📦 to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          twine upload --non-interactive --skip-existing --repository testpypi dist/*
      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --non-interactive --skip-existing dist/*
