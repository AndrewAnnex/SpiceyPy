name: PR and Merge builds (on main branch)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: "0 4 * * 0"
env:
  # increment to rebuild cspice manually
  CSPICE_VERSION: 67
  CSPICE_CACHE_NUMBER: 9
  PYPI_CACHE_NUMBER: 3

jobs:
  test:
    name: Test SpiceyPy 🌶️ 🥧
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        os: [ubuntu-22.04-arm, ubuntu-latest, macos-13, macos-14, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - name: Setup windows msvc
        if: ${{ matrix.os == 'windows-latest'}}
        uses: ilammy/msvc-dev-cmd@v1.13.0
      - name: Checkout 🌶️ 🥧
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python 🐍 ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: Display Python 🐍 version
        run: python -c "import sys; print(sys.version)"
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Get pip cache dir on mac/linux
        if: runner.os != 'Windows'
        id: pip-cache-nix
        run: |
          echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Get pip cache dir on windows
        if: runner.os == 'Windows'
        shell: pwsh
        id: pip-cache-win
        run: |
          echo "pip_cache_dir=$(pip cache dir)" >> $env:GITHUB_OUTPUT
      - name: Cache pip's cache dir mac/linux
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-nix.outputs.pip_cache_dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-
      - name: Cache pip's cache dir windows
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-win.outputs.pip_cache_dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-
      - name: Install dependencies
        run: |
          python -m pip install --user --group dev
          python -m pip install --user pipx
      - name: Build SpiceyPy 
        run: pipx run build
      - name: Install SpiceyPy 🌶️ 🥧
        run: pip install dist/*.whl
        shell: bash
      - name: Test 🧪 with coverage 📈
        run: |
          python -m coverage run --source spiceypy -m pytest --pyargs spiceypy --benchmark-disable
      - name: Run Benchmarks on latest Python Version Only
        if: ${{ matrix.python-version == '3.13' }}
        run: |
          python -m pytest --pyargs spiceypy --benchmark-only  
      - name: Upload 🆙 coverage 📈 report to codecov 
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          verbose: true
          use_oidc: true
  # test_offline_shared:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Checkout 🌶️ 🥧
  #       uses: actions/checkout@v5
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}
  #     - name: Set up Python 🐍 3.13
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.13'
  #     - name: Display Python 🐍 version
  #       run: python -c "import sys; print(sys.version)"
  #     - name: Install pip
  #       run: |
  #         python -m pip install --upgrade pip
  #     - name: Get pip cache dir
  #       id: pip-cache
  #       run: |
  #         echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_OUTPUT
  #     - name: Cache pip's cache dir
  #       uses: actions/cache@v4
  #       with:
  #         path: ${{ steps.pip-cache.outputs.pip_cache_dir }}
  #         key: ${{ runner.os }}-3.13-test-pip-${{ hashFiles('**/pyproject.toml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-3.13-test-pip-
  #     - name: Install dependencies
  #       run: | 
  #         python -m pip install --user --group dev
  #     - name: Download and extract the shared library for CSPICE 🌶️ 
  #       run: |
  #         mkdir -p /tmp/cspice/ 
  #         wget -O - https://anaconda.org/conda-forge/cspice/67/download/linux-64/cspice-67-h7f98852_0.tar.bz2 | tar xjC /tmp/cspice/
  #     - name: Install SpiceyPy 🌶️ 🥧
  #       env:
  #         CSPICE_SHARED_LIB: "/tmp/cspice/lib/libcspice.so"
  #         CSPICE_NO_TEMP: "YES"
  #         CSPICE_NO_BUILD: "YES"
  #       run: |
  #         python get_spice.py
  #         ls ./src/
  #         ls ./src/spiceypy/utils/
  #         python setup.py build_ext -j 2 --inplace
  #         python -m build --wheel
  #         ls ./src/spiceypy/cyice/
  #         ls ./dist/
  #         python -m pip install . --user
  #     - name: Test 🧪 with coverage 📈
  #       run: |
  #         python -m coverage run --source spiceypy -m pytest -vv --pyargs spiceypy --benchmark-disable
  #     - name: Upload 🆙 coverage 📈 report to codecov 
  #       uses: codecov/codecov-action@v5
  #       with:
  #         fail_ci_if_error: false
  #         verbose: true
  #         use_oidc: true
  # test_offline_cspice_install:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout 🌶️ 🥧
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python 🐍 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Display Python 🐍 version
        run: python -c "import sys; print(sys.version)"
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache pip's cache dir
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.pip_cache_dir }}
          key: ${{ runner.os }}-3.13-test-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-3.13-test-pip-
      - name: Install dependencies
        run : |
          python -m pip install --user --group dev
      - name: Download and extract CSPICE 🌶️ 
        run: |
          wget -O - https://naif.jpl.nasa.gov/pub/naif/misc/toolkit_N0067/C/PC_Linux_GCC_64bit/packages/cspice.tar.Z | gunzip -c | tar xC /tmp/ 
      - name: Install SpiceyPy 🌶️ 🥧
        env:
          CSPICE_SRC_DIR: "/tmp/cspice"
        run: |
          python get_spice.py
          ls ./src/
          ls ./src/spiceypy/utils/
          python setup.py build_ext -j 2 --inplace
          ls ./src/spiceypy/cyice/
          python -m pip install . --user
      - name: Test 🧪 with coverage 📈
        run: |
          python -m coverage run --source spiceypy -m pytest --pyargs spiceypy --benchmark-disable
      - name: Upload 🆙 coverage 📈 report to codecov 
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          verbose: true
          use_oidc: true
