name: PR and Merge builds (on main branch)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: "0 4 * * 0"
env:
  # increment to rebuild cspice manually
  CSPICE_VERSION: 67
  CSPICE_CACHE_NUMBER: 9
  PYPI_CACHE_NUMBER: 3

jobs:
  test:
    name: Test SpiceyPy üå∂Ô∏è ü•ß
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        os: [ubuntu-22.04-arm, ubuntu-latest, macos-13, macos-14, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - name: Setup windows msvc
        if: ${{ matrix.os == 'windows-latest'}}
        uses: ilammy/msvc-dev-cmd@v1.13.0
      - name: Checkout üå∂Ô∏è ü•ß
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python üêç ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: Display Python üêç version
        run: python -c "import sys; print(sys.version)"
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Get pip cache dir on mac/linux
        if: runner.os != 'Windows'
        id: pip-cache-nix
        run: |
          echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Get pip cache dir on windows
        if: runner.os == 'Windows'
        shell: pwsh
        id: pip-cache-win
        run: |
          echo "pip_cache_dir=$(pip cache dir)" >> $env:GITHUB_OUTPUT
      - name: Cache pip's cache dir mac/linux
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-nix.outputs.pip_cache_dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-
      - name: Cache pip's cache dir windows
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache-win.outputs.pip_cache_dir }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ env.PYPI_CACHE_NUMBER }}-test-pip-
      - name: Install dependencies
        run: |
          python -m pip install --user --group dev
          python -m pip install --user pipx
      - name: Build SpiceyPy 
        shell: bash
        env:
          SYSTEM_VERSION_COMPAT: 0
        run: 
          python -m pipx run build --python $(which python)
      - name: Install SpiceyPy üå∂Ô∏è ü•ß
        shell: bash
        env:
          SYSTEM_VERSION_COMPAT: 0
        run: 
          python -m pip install dist/*.whl
      - name: Test üß™ with coverage üìà
        run: |
          python -m coverage run --source spiceypy -m pytest --pyargs spiceypy --benchmark-disable
      - name: Run Benchmarks on latest Python Version Only
        if: ${{ matrix.python-version == '3.13' }}
        run: |
          python -m pytest --pyargs spiceypy --benchmark-only  
      - name: Upload üÜô coverage üìà report to codecov 
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          verbose: true
          use_oidc: true